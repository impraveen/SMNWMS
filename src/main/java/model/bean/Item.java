package model.bean;
// Generated Mar 29, 2017 7:51:05 AM by Hibernate Tools 5.2.1.Final

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name = "item", catalog = "smndbwms")
public class Item implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private Supplier supplier;
	private Unit unit;
	private Warehouse warehouse;
	private String name;
	private String genCode;
	private String code;
	private String size;
	private String properties;
	private float costPrice;
	private float salsePrice;
	private float qty;
	private List<SalesItem> salesItems = new ArrayList<SalesItem>();
	private List<PurchasingItem> purchasingItems = new ArrayList<PurchasingItem>();
	private List<InventoryCheck> inventoryChecks = new ArrayList<InventoryCheck>();

	public Item() {
	}

	public Item(int id) {
		this.id = id;
	}

	public Item(int id, Supplier supplier, Unit unit, Warehouse warehouse, String name, String genCode,
			String code, String size, String properties, float costPrice, float salsePrice, float qty, List<SalesItem> salesItems,
			List<PurchasingItem> purchasingItems, List<InventoryCheck> inventoryChecks) {
		this.id = id;
		this.supplier = supplier;
		this.unit = unit;
		this.warehouse = warehouse;
		this.name = name;
		this.genCode = genCode;
		this.code = code;
		this.size = size;
		this.properties = properties;
		this.costPrice = costPrice;
		this.salsePrice = salsePrice;
		this.qty = qty;
		this.salesItems = salesItems;
		this.purchasingItems = purchasingItems;
		this.inventoryChecks = inventoryChecks;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "supplier_id")
	public Supplier getSupplier() {
		return this.supplier;
	}

	public void setSupplier(Supplier supplier) {
		this.supplier = supplier;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unit_id")
	public Unit getUnit() {
		return this.unit;
	}

	public void setUnit(Unit unit) {
		this.unit = unit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "warehouse_id")
	public Warehouse getWarehouse() {
		return this.warehouse;
	}

	public void setWarehouse(Warehouse warehouse) {
		this.warehouse = warehouse;
	}

	@Column(name = "name", length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "gen_code", length = 45)
	public String getGenCode() {
		return this.genCode;
	}

	public void setGenCode(String genCode) {
		this.genCode = genCode;
	}

	@Column(name = "code", length = 45)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "size", length = 45)
	public String getSize() {
		return this.size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	@Column(name = "properties", length = 65535)
	public String getProperties() {
		return this.properties;
	}

	public void setProperties(String properties) {
		this.properties = properties;
	}

	@Column(name = "cost_price", precision = 12, scale = 0)
	public float getCostPrice() {
		return this.costPrice;
	}

	public void setCostPrice(float costPrice) {
		this.costPrice = costPrice;
	}

	@Column(name = "salse_price", precision = 12, scale = 0)
	public float getSalsePrice() {
		return this.salsePrice;
	}

	public void setSalsePrice(float salsePrice) {
		this.salsePrice = salsePrice;
	}

	@Column(name = "qty", precision = 12, scale = 0)
	public float getQty() {
		return this.qty;
	}

	public void setQty(float qty) {
		this.qty = qty;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	public List<SalesItem> getSalesItems() {
		return this.salesItems;
	}

	public void setSalesItems(List<SalesItem> salesItems) {
		this.salesItems = salesItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	public List<PurchasingItem> getPurchasingItems() {
		return this.purchasingItems;
	}

	public void setPurchasingItems(List<PurchasingItem> purchasingItems) {
		this.purchasingItems = purchasingItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	public List<InventoryCheck> getInventoryChecks() {
		return this.inventoryChecks;
	}

	public void setInventoryChecks(List<InventoryCheck> inventoryChecks) {
		this.inventoryChecks = inventoryChecks;
	}

	@Override
	public String toString() {
		return "Item [id=" + id + ", " + (supplier != null ? "supplier=" + supplier + ", " : "")
				+ (unit != null ? "unit=" + unit + ", " : "")
				+ (warehouse != null ? "warehouse=" + warehouse + ", " : "")
				+ (name != null ? "name=" + name + ", " : "") + (genCode != null ? "genCode=" + genCode + ", " : "")
				+ (code != null ? "code=" + code + ", " : "") + (size != null ? "size=" + size + ", " : "")
				+ (properties != null ? "properties=" + properties + ", " : "") + "costPrice=" + costPrice
				+ ", salsePrice=" + salsePrice + ", qty=" + qty + ", "
				+ (salesItems != null ? "salesItems=" + salesItems + ", " : "")
				+ (purchasingItems != null ? "purchasingItems=" + purchasingItems + ", " : "")
				+ (inventoryChecks != null ? "inventoryChecks=" + inventoryChecks : "") + "]";
	}
	

}
