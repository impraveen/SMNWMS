package model.bean;
// Generated Mar 29, 2017 7:51:05 AM by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name = "person", catalog = "smndbwms")
public class Person implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Address address;
	private Contract contract;
	private Country country;
	private PersonType personType;
	private String firstName;
	private String secondName;
	private String thirdName;
	private String lastName;
	private String email;
	private Integer mobile;
	private Integer nationalid;
	private List<Purchase> purchases = new ArrayList<Purchase>();
	private List<Sales> saleses = new ArrayList<Sales>();
	private List<User> users = new ArrayList<User>();
	private List<Contract> contracts = new ArrayList<Contract>();
	private List<Warehouse> warehouses = new ArrayList<Warehouse>();
	private List<StockMove> stockMoves = new ArrayList<StockMove>();
	private List<InventoryCheck> inventoryChecks = new ArrayList<InventoryCheck>();
	private List<Customer> customers = new ArrayList<Customer>();
	private List<Supplier> suppliers = new ArrayList<Supplier>();

	public Person() {
	}

	public Person(Country country) {
		this.country = country;
	}

	public Person(Address address, Contract contract, Country country, PersonType personType, String firstName,
			String secondName, String thirdName, String lastName, String email, Integer mobile, Integer nationalid,
			List<Purchase> purchases, List<Item> items, List<Sales> saleses, List<User> users, List<Contract> contracts, List<Warehouse> warehouses, List<StockMove> stockMoves,
			List<InventoryCheck> inventoryChecks, List<Customer> customers, List<Supplier> suppliers) {
		this.address = address;
		this.contract = contract;
		this.country = country;
		this.personType = personType;
		this.firstName = firstName;
		this.secondName = secondName;
		this.thirdName = thirdName;
		this.lastName = lastName;
		this.email = email;
		this.mobile = mobile;
		this.nationalid = nationalid;
		this.purchases = purchases;
		this.saleses = saleses;
		this.users = users;
		this.contracts = contracts;
		this.warehouses = warehouses;
		this.stockMoves = stockMoves;
		this.inventoryChecks = inventoryChecks;
		this.customers = customers;
		this.suppliers = suppliers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id")
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "contract_id")
	public Contract getContract() {
		return this.contract;
	}

	public void setContract(Contract contract) {
		this.contract = contract;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nationality_id", nullable = false)
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_id")
	public PersonType getPersonType() {
		return this.personType;
	}

	public void setPersonType(PersonType personType) {
		this.personType = personType;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "second_name", length = 45)
	public String getSecondName() {
		return this.secondName;
	}

	public void setSecondName(String secondName) {
		this.secondName = secondName;
	}

	@Column(name = "third_name", length = 45)
	public String getThirdName() {
		return this.thirdName;
	}

	public void setThirdName(String thirdName) {
		this.thirdName = thirdName;
	}

	@Column(name = "last_name", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "mobile")
	public Integer getMobile() {
		return this.mobile;
	}

	public void setMobile(Integer mobile) {
		this.mobile = mobile;
	}

	@Column(name = "nationalid")
	public Integer getNationalid() {
		return this.nationalid;
	}

	public void setNationalid(Integer nationalid) {
		this.nationalid = nationalid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<Purchase> getPurchases() {
		return this.purchases;
	}

	public void setPurchases(List<Purchase> purchases) {
		this.purchases = purchases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<Sales> getSaleses() {
		return this.saleses;
	}

	public void setSaleses(List<Sales> saleses) {
		this.saleses = saleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<User> getUsers() {
		return this.users;
	}

	public void setUsers(List<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<Contract> getContracts() {
		return this.contracts;
	}

	public void setContracts(List<Contract> contracts) {
		this.contracts = contracts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<Warehouse> getWarehouses() {
		return this.warehouses;
	}

	public void setWarehouses(List<Warehouse> warehouses) {
		this.warehouses = warehouses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<StockMove> getStockMoves() {
		return this.stockMoves;
	}

	public void setStockMoves(List<StockMove> stockMoves) {
		this.stockMoves = stockMoves;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<InventoryCheck> getInventoryChecks() {
		return this.inventoryChecks;
	}

	public void setInventoryChecks(List<InventoryCheck> inventoryChecks) {
		this.inventoryChecks = inventoryChecks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(List<Customer> customers) {
		this.customers = customers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<Supplier> getSuppliers() {
		return this.suppliers;
	}

	public void setSuppliers(List<Supplier> suppliers) {
		this.suppliers = suppliers;
	}

	@Override
	public String toString() {
		return "Person [id=" + id + ", " + (address != null ? "address=" + address + ", " : "")
				+ (contract != null ? "contract=" + contract + ", " : "")
				+ (country != null ? "country=" + country + ", " : "")
				+ (personType != null ? "personType=" + personType + ", " : "")
				+ (firstName != null ? "firstName=" + firstName + ", " : "")
				+ (secondName != null ? "secondName=" + secondName + ", " : "")
				+ (thirdName != null ? "thirdName=" + thirdName + ", " : "")
				+ (lastName != null ? "lastName=" + lastName + ", " : "")
				+ (email != null ? "email=" + email + ", " : "") + "mobile=" + mobile + ", nationalid=" + nationalid
				+ ", " + (purchases != null ? "purchases=" + purchases + ", " : "")
				+ (saleses != null ? "saleses=" + saleses + ", " : "") + (users != null ? "users=" + users + ", " : "")
				+ (contracts != null ? "contracts=" + contracts + ", " : "")
				+ (warehouses != null ? "warehouses=" + warehouses + ", " : "")
				+ (stockMoves != null ? "stockMoves=" + stockMoves + ", " : "")
				+ (inventoryChecks != null ? "inventoryChecks=" + inventoryChecks + ", " : "")
				+ (customers != null ? "customers=" + customers + ", " : "")
				+ (suppliers != null ? "suppliers=" + suppliers : "") + "]";
	}


	

}
